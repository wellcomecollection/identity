steps:
  # Deploy any changes to Auth0 scripts/actions
  - name: "auth0 scripts deployment"
    concurrency: 1
    concurrency_group: "identity-deployment/auth0"
    command:
      - ". /app/.buildkite/scripts/init-environment.sh --init-terraform"
      - "yarn --frozen-lockfile"
      - "yarn build-auth0-database-scripts"
      - "yarn build-auth0-actions"
      - "/app/.buildkite/scripts/auth0-deployment.sh"
    plugins:
      - wellcomecollection/aws-assume-role#v0.2.2:
          role: "arn:aws:iam::770700576653:role/identity-ci"
      - ecr#v2.2.0:
          login: true
      - docker-compose#v4.9.0:
          run: app
          config: .buildkite/docker-compose.yml
          mount-buildkite-agent: true
          mount-ssh-agent: true # For Terraform to fetch modules
          shell: ["/bin/bash", "-e", "-c"] # So bash scripts can be sourced
          env:
            - BUILDKITE_BRANCH
            - BUILDKITE_SOURCE
            - AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY
            - AWS_SESSION_TOKEN
            - DEPLOY_ENVIRONMENT

  # Deploy any changes to Auth0 universal-login
  - name: "auth0 universal-login deployment"
    concurrency: 1
    # Same as the Auth0 script deployment so as not to hit Auth0 API rate limits
    concurrency_group: "identity-deployment/auth0"
    plugins:
      - wellcomecollection/aws-assume-role#v0.2.2:
          role: "arn:aws:iam::770700576653:role/identity-ci"
      - docker-compose#v4.9.0:
          run: universal_login_deploy
          command: [ "yarn", "run", "deploy-from-env" ]
          env:
            - BUILDKITE_BRANCH
            - BUILDKITE_SOURCE
            - AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY
            - AWS_SESSION_TOKEN
            - DEPLOY_ENVIRONMENT

  # Deploy Lambdas to AWS
  - name: "lambda deployment"
    concurrency: 1
    concurrency_group: "identity-deployment/lambdas"
    command:
      - ". /app/.buildkite/scripts/init-environment.sh"
      - "/app/.buildkite/scripts/aws-lambda-deployment.sh"
    plugins:
      - wellcomecollection/aws-assume-role#v0.2.2:
          role: "arn:aws:iam::770700576653:role/identity-ci"
      - ecr#v2.2.0:
          login: true
      - docker-compose#v4.9.0:
          run: app
          config: .buildkite/docker-compose.yml
          mount-buildkite-agent: true
          mount-ssh-agent: true # For Terraform to fetch modules
          shell: ["/bin/bash", "-e", "-c"] # So bash scripts can be sourced
          env:
            - BUILDKITE_BRANCH
            - BUILDKITE_SOURCE
            - BUILDKITE_COMMIT
            - AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY
            - AWS_SESSION_TOKEN
            - DEPLOY_ENVIRONMENT
            - DEPLOY_API_GATEWAY_STAGE
